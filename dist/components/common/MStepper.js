"use strict";var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _react = _interopRequireWildcard(require("react"));

class MStepper extends _react.Component {





  renderSteps() {
    const { currentStep, totalSteps } = { ...this.props };
    let steps = [];
    let currentXOffset = 0;
    for (let i = 0; i < totalSteps; i++) {
      const otherCircle = /*#__PURE__*/
      _react.default.createElement("circle", {
        key: i,
        cx: "6",
        cy: "6",
        r: "6",
        transform: `translate(${currentXOffset} 5)`,
        fill: "#cbcbcb" });


      const currentCircle = /*#__PURE__*/
      _react.default.createElement("circle", {
        key: i,
        cx: "11",
        cy: "11",
        r: "11",
        transform: `translate(${currentXOffset} 0)`,
        fill: "#2362c7" });


      currentXOffset = i + 1 === currentStep ? currentXOffset + 22 + 10 : currentXOffset + 22;
      steps.push(i + 1 === currentStep ? currentCircle : otherCircle);
    }
    return steps;
  }

  render() {
    const { totalSteps } = { ...this.props };
    return /*#__PURE__*/(
      _react.default.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "88",
        height: "22",
        viewBox: `0 0 ${22 * totalSteps} 22` },

      this.renderSteps()));

























  }}exports.default = MStepper;(0, _defineProperty2.default)(MStepper, "defaultProps", { currentStep: 1, totalSteps: 1 });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2NvbW1vbi9NU3RlcHBlci5qc3giXSwibmFtZXMiOlsiTVN0ZXBwZXIiLCJDb21wb25lbnQiLCJyZW5kZXJTdGVwcyIsImN1cnJlbnRTdGVwIiwidG90YWxTdGVwcyIsInByb3BzIiwic3RlcHMiLCJjdXJyZW50WE9mZnNldCIsImkiLCJvdGhlckNpcmNsZSIsImN1cnJlbnRDaXJjbGUiLCJwdXNoIiwicmVuZGVyIl0sIm1hcHBpbmdzIjoiZ1hBQUE7O0FBRWUsTUFBTUEsUUFBTixTQUF1QkMsZ0JBQXZCLENBQWlDOzs7Ozs7QUFNOUNDLEVBQUFBLFdBQVcsR0FBRztBQUNaLFVBQU0sRUFBRUMsV0FBRixFQUFlQyxVQUFmLEtBQThCLEVBQUUsR0FBRyxLQUFLQyxLQUFWLEVBQXBDO0FBQ0EsUUFBSUMsS0FBSyxHQUFHLEVBQVo7QUFDQSxRQUFJQyxjQUFjLEdBQUcsQ0FBckI7QUFDQSxTQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdKLFVBQXBCLEVBQWdDSSxDQUFDLEVBQWpDLEVBQXFDO0FBQ25DLFlBQU1DLFdBQVc7QUFDZjtBQUNFLFFBQUEsR0FBRyxFQUFFRCxDQURQO0FBRUUsUUFBQSxFQUFFLEVBQUMsR0FGTDtBQUdFLFFBQUEsRUFBRSxFQUFDLEdBSEw7QUFJRSxRQUFBLENBQUMsRUFBQyxHQUpKO0FBS0UsUUFBQSxTQUFTLEVBQUcsYUFBWUQsY0FBZSxLQUx6QztBQU1FLFFBQUEsSUFBSSxFQUFDLFNBTlAsR0FERjs7O0FBVUEsWUFBTUcsYUFBYTtBQUNqQjtBQUNFLFFBQUEsR0FBRyxFQUFFRixDQURQO0FBRUUsUUFBQSxFQUFFLEVBQUMsSUFGTDtBQUdFLFFBQUEsRUFBRSxFQUFDLElBSEw7QUFJRSxRQUFBLENBQUMsRUFBQyxJQUpKO0FBS0UsUUFBQSxTQUFTLEVBQUcsYUFBWUQsY0FBZSxLQUx6QztBQU1FLFFBQUEsSUFBSSxFQUFDLFNBTlAsR0FERjs7O0FBVUFBLE1BQUFBLGNBQWMsR0FBR0MsQ0FBQyxHQUFHLENBQUosS0FBVUwsV0FBVixHQUF3QkksY0FBYyxHQUFHLEVBQWpCLEdBQXNCLEVBQTlDLEdBQW1EQSxjQUFjLEdBQUcsRUFBckY7QUFDQUQsTUFBQUEsS0FBSyxDQUFDSyxJQUFOLENBQVdILENBQUMsR0FBRyxDQUFKLEtBQVVMLFdBQVYsR0FBd0JPLGFBQXhCLEdBQXdDRCxXQUFuRDtBQUNEO0FBQ0QsV0FBT0gsS0FBUDtBQUNEOztBQUVETSxFQUFBQSxNQUFNLEdBQUc7QUFDUCxVQUFNLEVBQUVSLFVBQUYsS0FBaUIsRUFBRSxHQUFHLEtBQUtDLEtBQVYsRUFBdkI7QUFDQTtBQUNFO0FBQ0UsUUFBQSxLQUFLLEVBQUMsNEJBRFI7QUFFRSxRQUFBLEtBQUssRUFBQyxJQUZSO0FBR0UsUUFBQSxNQUFNLEVBQUMsSUFIVDtBQUlFLFFBQUEsT0FBTyxFQUFHLE9BQU0sS0FBS0QsVUFBVyxLQUpsQzs7QUFNRyxXQUFLRixXQUFMLEVBTkgsQ0FERjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQ0QsR0F4RTZDLEMseURBQTNCRixRLGtCQUNHLEVBQ3BCRyxXQUFXLEVBQUUsQ0FETyxFQUVwQkMsVUFBVSxFQUFFLENBRlEsRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTVN0ZXBwZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGN1cnJlbnRTdGVwOiAxLFxuICAgIHRvdGFsU3RlcHM6IDEsXG4gIH07XG5cbiAgcmVuZGVyU3RlcHMoKSB7XG4gICAgY29uc3QgeyBjdXJyZW50U3RlcCwgdG90YWxTdGVwcyB9ID0geyAuLi50aGlzLnByb3BzIH07XG4gICAgbGV0IHN0ZXBzID0gW107XG4gICAgbGV0IGN1cnJlbnRYT2Zmc2V0ID0gMDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRvdGFsU3RlcHM7IGkrKykge1xuICAgICAgY29uc3Qgb3RoZXJDaXJjbGUgPSAoXG4gICAgICAgIDxjaXJjbGVcbiAgICAgICAgICBrZXk9e2l9XG4gICAgICAgICAgY3g9XCI2XCJcbiAgICAgICAgICBjeT1cIjZcIlxuICAgICAgICAgIHI9XCI2XCJcbiAgICAgICAgICB0cmFuc2Zvcm09e2B0cmFuc2xhdGUoJHtjdXJyZW50WE9mZnNldH0gNSlgfVxuICAgICAgICAgIGZpbGw9XCIjY2JjYmNiXCJcbiAgICAgICAgLz5cbiAgICAgICk7XG4gICAgICBjb25zdCBjdXJyZW50Q2lyY2xlID0gKFxuICAgICAgICA8Y2lyY2xlXG4gICAgICAgICAga2V5PXtpfVxuICAgICAgICAgIGN4PVwiMTFcIlxuICAgICAgICAgIGN5PVwiMTFcIlxuICAgICAgICAgIHI9XCIxMVwiXG4gICAgICAgICAgdHJhbnNmb3JtPXtgdHJhbnNsYXRlKCR7Y3VycmVudFhPZmZzZXR9IDApYH1cbiAgICAgICAgICBmaWxsPVwiIzIzNjJjN1wiXG4gICAgICAgIC8+XG4gICAgICApO1xuICAgICAgY3VycmVudFhPZmZzZXQgPSBpICsgMSA9PT0gY3VycmVudFN0ZXAgPyBjdXJyZW50WE9mZnNldCArIDIyICsgMTAgOiBjdXJyZW50WE9mZnNldCArIDIyO1xuICAgICAgc3RlcHMucHVzaChpICsgMSA9PT0gY3VycmVudFN0ZXAgPyBjdXJyZW50Q2lyY2xlIDogb3RoZXJDaXJjbGUpO1xuICAgIH1cbiAgICByZXR1cm4gc3RlcHM7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyB0b3RhbFN0ZXBzIH0gPSB7IC4uLnRoaXMucHJvcHMgfTtcbiAgICByZXR1cm4gKFxuICAgICAgPHN2Z1xuICAgICAgICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgICAgICAgd2lkdGg9XCI4OFwiXG4gICAgICAgIGhlaWdodD1cIjIyXCJcbiAgICAgICAgdmlld0JveD17YDAgMCAkezIyICogdG90YWxTdGVwc30gMjJgfVxuICAgICAgPlxuICAgICAgICB7dGhpcy5yZW5kZXJTdGVwcygpfVxuICAgICAgICB7LyogPGNpcmNsZSBjeD1cIjZcIiBjeT1cIjZcIiByPVwiNlwiIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgwIDUpXCIgZmlsbD1cIiNjYmNiY2JcIiAvPiAqL31cbiAgICAgICAgey8qIDxjaXJjbGVcbiAgICAgICAgICBjeD1cIjExXCJcbiAgICAgICAgICBjeT1cIjExXCJcbiAgICAgICAgICByPVwiMTFcIlxuICAgICAgICAgIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgyMilcIlxuICAgICAgICAgIGZpbGw9XCIjMjM2MmM3XCJcbiAgICAgICAgLz4gKi99XG4gICAgICAgIHsvKiA8Y2lyY2xlXG4gICAgICAgICAgY3g9XCI2XCJcbiAgICAgICAgICBjeT1cIjZcIlxuICAgICAgICAgIHI9XCI2XCJcbiAgICAgICAgICAvLyB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoNDQgNSlcIiArIDEwXG4gICAgICAgICAgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDU0IDUpXCJcbiAgICAgICAgICBmaWxsPVwiI2NiY2JjYlwiXG4gICAgICAgIC8+XG4gICAgICAgIDxjaXJjbGVcbiAgICAgICAgICBjeD1cIjZcIlxuICAgICAgICAgIGN5PVwiNlwiXG4gICAgICAgICAgcj1cIjZcIlxuICAgICAgICAgIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSg3NiA1KVwiXG4gICAgICAgICAgZmlsbD1cIiNjYmNiY2JcIlxuICAgICAgICAvPiAqL31cbiAgICAgIDwvc3ZnPlxuICAgICk7XG4gIH1cbn1cbiJdfQ==