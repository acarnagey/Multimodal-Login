"use strict";var mongoose = require("mongoose");
var uniqueValidator = require("mongoose-unique-validator");

var OAuthUserSchema = new mongoose.Schema({
  oauthId: { type: String, index: true },
  username: {
    type: String,
    lowercase: true,
    unique: true,
    // match: [/^[a-zA-Z0-9]+$/, "is invalid"],
    index: true },

  email: String,
  contactEmail: String,
  phoneNumber: String,
  oneTimeCode: Number,
  didAddress: String,
  didPublicEncryptionKey: String,
  didPrivateKeyGuid: String,
  oneTimeCodeIssueDate: Date,
  loginTypes: [{ type: mongoose.Schema.Types.ObjectId, ref: "LoginTypeBase" }] });


OAuthUserSchema.plugin(uniqueValidator, { message: "is already taken." });

const OAuthUser = mongoose.model("OAuthUser", OAuthUserSchema);
module.exports = OAuthUser;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9kYXRhYmFzZS9tb2RlbHMvT0F1dGhVc2VyLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsInVuaXF1ZVZhbGlkYXRvciIsIk9BdXRoVXNlclNjaGVtYSIsIlNjaGVtYSIsIm9hdXRoSWQiLCJ0eXBlIiwiU3RyaW5nIiwiaW5kZXgiLCJ1c2VybmFtZSIsImxvd2VyY2FzZSIsInVuaXF1ZSIsImVtYWlsIiwiY29udGFjdEVtYWlsIiwicGhvbmVOdW1iZXIiLCJvbmVUaW1lQ29kZSIsIk51bWJlciIsImRpZEFkZHJlc3MiLCJkaWRQdWJsaWNFbmNyeXB0aW9uS2V5IiwiZGlkUHJpdmF0ZUtleUd1aWQiLCJvbmVUaW1lQ29kZUlzc3VlRGF0ZSIsIkRhdGUiLCJsb2dpblR5cGVzIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsInBsdWdpbiIsIm1lc3NhZ2UiLCJPQXV0aFVzZXIiLCJtb2RlbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJhQUFBLElBQUlBLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7QUFDQSxJQUFJQyxlQUFlLEdBQUdELE9BQU8sQ0FBQywyQkFBRCxDQUE3Qjs7QUFFQSxJQUFJRSxlQUFlLEdBQUcsSUFBSUgsUUFBUSxDQUFDSSxNQUFiLENBQW9CO0FBQ3hDQyxFQUFBQSxPQUFPLEVBQUUsRUFBRUMsSUFBSSxFQUFFQyxNQUFSLEVBQWdCQyxLQUFLLEVBQUUsSUFBdkIsRUFEK0I7QUFFeENDLEVBQUFBLFFBQVEsRUFBRTtBQUNSSCxJQUFBQSxJQUFJLEVBQUVDLE1BREU7QUFFUkcsSUFBQUEsU0FBUyxFQUFFLElBRkg7QUFHUkMsSUFBQUEsTUFBTSxFQUFFLElBSEE7QUFJUjtBQUNBSCxJQUFBQSxLQUFLLEVBQUUsSUFMQyxFQUY4Qjs7QUFTeENJLEVBQUFBLEtBQUssRUFBRUwsTUFUaUM7QUFVeENNLEVBQUFBLFlBQVksRUFBRU4sTUFWMEI7QUFXeENPLEVBQUFBLFdBQVcsRUFBRVAsTUFYMkI7QUFZeENRLEVBQUFBLFdBQVcsRUFBRUMsTUFaMkI7QUFheENDLEVBQUFBLFVBQVUsRUFBRVYsTUFiNEI7QUFjeENXLEVBQUFBLHNCQUFzQixFQUFFWCxNQWRnQjtBQWV4Q1ksRUFBQUEsaUJBQWlCLEVBQUVaLE1BZnFCO0FBZ0J4Q2EsRUFBQUEsb0JBQW9CLEVBQUVDLElBaEJrQjtBQWlCeENDLEVBQUFBLFVBQVUsRUFBRSxDQUFDLEVBQUVoQixJQUFJLEVBQUVOLFFBQVEsQ0FBQ0ksTUFBVCxDQUFnQm1CLEtBQWhCLENBQXNCQyxRQUE5QixFQUF3Q0MsR0FBRyxFQUFFLGVBQTdDLEVBQUQsQ0FqQjRCLEVBQXBCLENBQXRCOzs7QUFvQkF0QixlQUFlLENBQUN1QixNQUFoQixDQUF1QnhCLGVBQXZCLEVBQXdDLEVBQUV5QixPQUFPLEVBQUUsbUJBQVgsRUFBeEM7O0FBRUEsTUFBTUMsU0FBUyxHQUFHNUIsUUFBUSxDQUFDNkIsS0FBVCxDQUFlLFdBQWYsRUFBNEIxQixlQUE1QixDQUFsQjtBQUNBMkIsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxTQUFqQiIsInNvdXJjZXNDb250ZW50IjpbInZhciBtb25nb29zZSA9IHJlcXVpcmUoXCJtb25nb29zZVwiKTtcbnZhciB1bmlxdWVWYWxpZGF0b3IgPSByZXF1aXJlKFwibW9uZ29vc2UtdW5pcXVlLXZhbGlkYXRvclwiKTtcblxudmFyIE9BdXRoVXNlclNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICBvYXV0aElkOiB7IHR5cGU6IFN0cmluZywgaW5kZXg6IHRydWUgfSxcbiAgdXNlcm5hbWU6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgbG93ZXJjYXNlOiB0cnVlLFxuICAgIHVuaXF1ZTogdHJ1ZSxcbiAgICAvLyBtYXRjaDogWy9eW2EtekEtWjAtOV0rJC8sIFwiaXMgaW52YWxpZFwiXSxcbiAgICBpbmRleDogdHJ1ZSxcbiAgfSxcbiAgZW1haWw6IFN0cmluZyxcbiAgY29udGFjdEVtYWlsOiBTdHJpbmcsXG4gIHBob25lTnVtYmVyOiBTdHJpbmcsXG4gIG9uZVRpbWVDb2RlOiBOdW1iZXIsXG4gIGRpZEFkZHJlc3M6IFN0cmluZyxcbiAgZGlkUHVibGljRW5jcnlwdGlvbktleTogU3RyaW5nLFxuICBkaWRQcml2YXRlS2V5R3VpZDogU3RyaW5nLFxuICBvbmVUaW1lQ29kZUlzc3VlRGF0ZTogRGF0ZSxcbiAgbG9naW5UeXBlczogW3sgdHlwZTogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk9iamVjdElkLCByZWY6IFwiTG9naW5UeXBlQmFzZVwiIH1dLFxufSk7XG5cbk9BdXRoVXNlclNjaGVtYS5wbHVnaW4odW5pcXVlVmFsaWRhdG9yLCB7IG1lc3NhZ2U6IFwiaXMgYWxyZWFkeSB0YWtlbi5cIiB9KTtcblxuY29uc3QgT0F1dGhVc2VyID0gbW9uZ29vc2UubW9kZWwoXCJPQXV0aFVzZXJcIiwgT0F1dGhVc2VyU2NoZW1hKTtcbm1vZHVsZS5leHBvcnRzID0gT0F1dGhVc2VyO1xuIl19